name: Deploy Sat Scan Data Collector to Amazon ECS

on:
  push:
    branches:
      - mq-broker-setup

env:
  AWS_REGION: "us-east-2"
  # ECR_REPOSITORY: "sat-scan" # Amazon ECR repository name
  # ECS_CLUSTER: sat-scan-cluster # Amazon ECS cluster name
  # ECS_SERVICE: sat-scan-data-collector-service # Amazon ECS service name
  # ECS_TASK_DEFINITION: ./infrastructure/task-definitions/aws/sat-scan-data-collector-container.json
  # CONTAINER_NAME: sat-scan-data-collector-family # Name specified in containerDefinitions section of task definition

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_CLIENT_ID }}
          aws-secret-access-key: ${{ secrets.AWS_CLIENT_SECRET }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Create credentials.ini
        env:
          SPACE_TRACK_API_CLIENT: ${{ secrets.SPACE_TRACK_API_CLIENT }}
          SPACE_TRACK_API_SECRET: ${{ secrets.SPACE_TRACK_API_SECRET }}
        run: |
          cd applications/space-data-collector

          cat <<EOF > credentials.ini
          [space-track.org]
          username=$SPACE_TRACK_API_CLIENT
          password=$SPACE_TRACK_API_SECRET
          EOF

          echo "Created .credentials.ini"

      # - name: Download infrastructure configuration
      #   run: |
      #     rm applications/space-data-collector/route-config.ini
      #     aws s3 cp s3://sat-scan-route-config/route-config.ini applications/space-data-collector/route-config.ini
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_CLIENT_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_CLIENT_SECRET }}
      #     AWS_DEFAULT_REGION: "us-east-2"

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build docker container and push it to ECR for ECS deploy
          cd applications/space-data-collector
          rm -rf package
          cd function
          pip install --target ../package/python -r requirements.txt
          cd ..
          mv package/python function
          zip -r lambda_code.zip function
          aws s3 cp lambda_code.zip s3://sat-scan-data-collector
